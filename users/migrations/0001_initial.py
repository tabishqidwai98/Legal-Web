# Generated by Django 3.1.6 on 2021-05-28 09:16

import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_lawyer', models.BooleanField(default=False)),
                ('is_client', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(choices=[('Criminal Case', 'Criminal Case'), ('Civil Case', 'Civil Case'), ('Marriage Dissolution', 'Marriage Dissolution'), ('Paternity and Child Custody', 'Paternity and Child Custody'), ('Protection Orders Aganist Domestic Violence', 'Protection Orders Aganist Domestic Violence'), ('Name Changes', 'Name Changes'), ('Guardianship', 'Guardianship'), ('Termination of Parental Rights and Adoptions', 'Termination of Parental Rights and Adoptions'), ('Juvenile Matters', 'Juvenile Matters'), ('Emancipation and Approval of Underage Marriages', 'Emancipation and Approval of Underage Marriages')], default='Criminal Case', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100)),
                ('subject', models.CharField(max_length=100)),
                ('message', models.TextField(max_length=400)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('email', models.EmailField(max_length=32)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='users.user')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], default='M', max_length=1)),
                ('pic', models.ImageField(default='client.png', upload_to='users/client')),
                ('contact', models.CharField(default='999999999', max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Lawyer',
            fields=[
                ('email', models.EmailField(max_length=200)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='users.user')),
                ('designation', models.CharField(default='inter lawyer', max_length=25)),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], default='M', max_length=1)),
                ('city', models.CharField(default='lucknow', max_length=25)),
                ('lawyertype', models.CharField(default='Criminal Lawyer', max_length=25)),
                ('contact', models.CharField(default='999999999', max_length=15)),
                ('experience', models.FloatField(default=1, help_text='no of years as lawyer')),
                ('pic', models.ImageField(default='lawyer.png', upload_to='users/laywers')),
            ],
        ),
        migrations.CreateModel(
            name='Cases_Fought',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case', models.CharField(default='Case Name', max_length=255)),
                ('summary', models.TextField()),
                ('status', models.CharField(choices=[('win', 'win'), ('lose', 'lose')], default='win', max_length=255)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.category')),
                ('user', models.ForeignKey(default=100, on_delete=django.db.models.deletion.CASCADE, to='users.lawyer')),
            ],
        ),
    ]
